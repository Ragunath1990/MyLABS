/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gmailsender;

/**
 *
 * @author Ragunath Gunasekaran
 */
import java.security.Security;
import java.util.Date;
import java.util.Properties;
import java.util.Scanner;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;


 public class GmailSender {
   
      @SuppressWarnings("empty-statement")
      public static void main(String[] args) throws AddressException, MessagingException {
      
      
         Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());
         final String SSL_FACTORY = "javax.net.ssl.SSLSocketFactory";
      // Get a Properties object
         Properties props = System.getProperties();
       // props.setProperty("proxySet","true");
        // props.setProperty("http.ProxyHost","smtp.ssn.net");
        // props.setProperty("http.ProxyPort","8080");
         props.setProperty("mail.smtp.host", "smtp.ssn.net");
         props.setProperty("mail.smtp.socketFactory.class", SSL_FACTORY);
         props.setProperty("mail.smtp.socketFactory.fallback", "false");
         props.setProperty("mail.smtp.port", "465");
         props.setProperty("mail.smtp.socketFactory.port", "465");
         props.put("mail.smtp.auth", "true");
         props.put("mail.debug", "true");
         props.put("mail.store.protocol", "pop3");
         props.put("mail.transport.protocol", "smtp");
         final String username = "raguibm14@gmail.com";
         final String password = "xxxxxxxxxxx";
         Session session = Session.getDefaultInstance(props, 
                              new Authenticator(){
                                 protected PasswordAuthentication getPasswordAuthentication() 
                                 {
                                    return new PasswordAuthentication(username, password);
                                 }});
      
       
         Message msg = new MimeMessage(session);
      
      // -- Set the FROM and TO fields --
         msg.setFrom(new InternetAddress("raguibm14@gmail.com"));
         msg.setRecipients(Message.RecipientType.TO, 
                          InternetAddress.parse("ragunath90@gmail.com",false));
         msg.setSubject("KEY");
         
         Scanner sc =new Scanner(System.in);
         System.out.print("Enter the Text to be Sent");
         //String input = sc.nextLine();
         String input ="765526547263546635325363223";
         msg.setText(input);
         msg.setSentDate(new Date());
         Transport.send(msg);
         System.out.println("Message sent.");
      }
   }
